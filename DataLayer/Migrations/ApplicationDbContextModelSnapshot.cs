// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Postal")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("integer");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "Anytown",
                            Country = "Denmark",
                            Postal = 12345,
                            Street = "Main Street",
                            StreetNumber = 123
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SignedIn")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Password = "123",
                            SignedIn = false,
                            Username = "Administrator"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Pop"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Jazz"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Classical"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Blues"
                        },
                        new
                        {
                            GenreId = 6,
                            GenreName = "Country"
                        },
                        new
                        {
                            GenreId = 7,
                            GenreName = "Reggae"
                        },
                        new
                        {
                            GenreId = 8,
                            GenreName = "Hip-Hop"
                        },
                        new
                        {
                            GenreId = 9,
                            GenreName = "Electronic"
                        },
                        new
                        {
                            GenreId = 10,
                            GenreName = "Folk"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.OrderProductDetails", b =>
                {
                    b.Property<int>("OrderProductDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderProductDetailsId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("OrderProductDetailsId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderProductDetails");
                });

            modelBuilder.Entity("DataLayer.Models.RecordLabel", b =>
                {
                    b.Property<int>("RecordLabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RecordLabelId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("integer");

                    b.HasKey("RecordLabelId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("RecordLabels");

                    b.HasData(
                        new
                        {
                            RecordLabelId = 1,
                            LabelName = "Label-1"
                        },
                        new
                        {
                            RecordLabelId = 2,
                            LabelName = "Label-2"
                        },
                        new
                        {
                            RecordLabelId = 3,
                            LabelName = "Label-3"
                        },
                        new
                        {
                            RecordLabelId = 4,
                            LabelName = "Label-4"
                        },
                        new
                        {
                            RecordLabelId = 5,
                            LabelName = "Label-5"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("NumStars")
                        .HasColumnType("integer");

                    b.Property<string>("ReviewComment")
                        .HasColumnType("text");

                    b.Property<int>("VinylId")
                        .HasColumnType("integer");

                    b.HasKey("ReviewId");

                    b.HasIndex("VinylId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            NumStars = 5,
                            ReviewComment = "Review for album Dansktop",
                            VinylId = 1
                        },
                        new
                        {
                            ReviewId = 2,
                            NumStars = 5,
                            ReviewComment = "Review for album 808s & Heartbreak",
                            VinylId = 2
                        },
                        new
                        {
                            ReviewId = 3,
                            NumStars = 4,
                            ReviewComment = "Review for album Ye",
                            VinylId = 3
                        },
                        new
                        {
                            ReviewId = 4,
                            NumStars = 5,
                            ReviewComment = "Review for album Daytona",
                            VinylId = 4
                        },
                        new
                        {
                            ReviewId = 5,
                            NumStars = 2,
                            ReviewComment = "Review for album AT.LONG.LAST.A$AP",
                            VinylId = 5
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Vinyl", b =>
                {
                    b.Property<int>("VinylId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VinylId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("RecordLabelId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VinylId");

                    b.HasIndex("RecordLabelId");

                    b.ToTable("Vinyls");

                    b.HasData(
                        new
                        {
                            VinylId = 1,
                            Description = "Ukendt Kunstner",
                            Price = 299.99000000000001,
                            RecordLabelId = 1,
                            Title = "Dansktop"
                        },
                        new
                        {
                            VinylId = 2,
                            Description = "Kanye West",
                            Price = 349.99000000000001,
                            RecordLabelId = 2,
                            Title = "808s & Heartbreak"
                        },
                        new
                        {
                            VinylId = 3,
                            Description = "Kanye West",
                            Price = 399.99000000000001,
                            RecordLabelId = 3,
                            Title = "Ye"
                        },
                        new
                        {
                            VinylId = 4,
                            Description = "Pusha T",
                            Price = 249.99000000000001,
                            RecordLabelId = 4,
                            Title = "Daytona"
                        },
                        new
                        {
                            VinylId = 5,
                            Description = "A$AP Rocky",
                            Price = 199.99000000000001,
                            RecordLabelId = 5,
                            Title = "AT.LONG.LAST.A$AP"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.VinylCover", b =>
                {
                    b.Property<int>("VinylCoverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VinylCoverId"));

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VinylId")
                        .HasColumnType("integer");

                    b.HasKey("VinylCoverId");

                    b.HasIndex("VinylId");

                    b.ToTable("Covers");

                    b.HasData(
                        new
                        {
                            VinylCoverId = 1,
                            Path = "https://1265745076.rsc.cdn77.org/1024/jpg/137381-ukendt-kunstner-dansktop-LP-653a3a115cc88.jpg",
                            VinylId = 1
                        },
                        new
                        {
                            VinylCoverId = 2,
                            Path = "https://1265745076.rsc.cdn77.org/360/jpg/12153-kanye-west-808s-heartbreak-LP-5acfdad3e3ed8.jpg",
                            VinylId = 2
                        },
                        new
                        {
                            VinylCoverId = 3,
                            Path = "https://1265745076.rsc.cdn77.org/360/jpg/21701-5e8fa10e7e35d.jpg",
                            VinylId = 3
                        },
                        new
                        {
                            VinylCoverId = 4,
                            Path = "https://1265745076.rsc.cdn77.org/360/jpg/46525-pusha-t-daytona-LP-5b7ff01019397.jpg",
                            VinylId = 4
                        },
                        new
                        {
                            VinylCoverId = 5,
                            Path = "https://1265745076.rsc.cdn77.org/360/jpg/8147-a-ap-rocky-at-long-last-a-ap-LP-62ecd211f0860.jpg",
                            VinylId = 5
                        });
                });

            modelBuilder.Entity("DataLayer.Models.VinylGenre", b =>
                {
                    b.Property<int>("VinylId")
                        .HasColumnType("integer");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.HasKey("VinylId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("VinylGenres");

                    b.HasData(
                        new
                        {
                            VinylId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            VinylId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            VinylId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            VinylId = 4,
                            GenreId = 4
                        },
                        new
                        {
                            VinylId = 5,
                            GenreId = 5
                        });
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            AddressId = 1,
                            BuyDate = new DateTime(2023, 11, 6, 15, 46, 16, 869, DateTimeKind.Utc).AddTicks(7980),
                            Email = "customer@example.com"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.OrderProductDetails", b =>
                {
                    b.HasOne("Order", "Order")
                        .WithMany("OrderProductDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DataLayer.Models.RecordLabel", b =>
                {
                    b.HasOne("DataLayer.Models.Address", "Address")
                        .WithOne("RecordLabel")
                        .HasForeignKey("DataLayer.Models.RecordLabel", "AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DataLayer.Models.Review", b =>
                {
                    b.HasOne("DataLayer.Models.Vinyl", "Vinyl")
                        .WithMany("Reviews")
                        .HasForeignKey("VinylId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vinyl");
                });

            modelBuilder.Entity("DataLayer.Models.Vinyl", b =>
                {
                    b.HasOne("DataLayer.Models.RecordLabel", "RecordLabel")
                        .WithMany("Vinyls")
                        .HasForeignKey("RecordLabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordLabel");
                });

            modelBuilder.Entity("DataLayer.Models.VinylCover", b =>
                {
                    b.HasOne("DataLayer.Models.Vinyl", "Vinyl")
                        .WithMany("Covers")
                        .HasForeignKey("VinylId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vinyl");
                });

            modelBuilder.Entity("DataLayer.Models.VinylGenre", b =>
                {
                    b.HasOne("DataLayer.Models.Genre", "Genre")
                        .WithMany("Vinyls")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Vinyl", "Vinyl")
                        .WithMany("Genres")
                        .HasForeignKey("VinylId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Vinyl");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("DataLayer.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DataLayer.Models.Address", b =>
                {
                    b.Navigation("RecordLabel")
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Genre", b =>
                {
                    b.Navigation("Vinyls");
                });

            modelBuilder.Entity("DataLayer.Models.RecordLabel", b =>
                {
                    b.Navigation("Vinyls");
                });

            modelBuilder.Entity("DataLayer.Models.Vinyl", b =>
                {
                    b.Navigation("Covers");

                    b.Navigation("Genres");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("OrderProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
